{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamsuree/Desktop/project/react/quiz-app/src/Components/Intro.jsx\",\n  _s = $RefreshSig$();\nimport { addDoc, collection, onSnapshot, Timestamp } from \"firebase/firestore\";\nimport { useEffect, useRef, useState } from \"react\";\nimport userService from \"../Services/users.service\";\nimport firebase from \"../firebase\";\nimport { doc, setDoc } from \"firebase/firestore\";\n\n//import firebase from 'firebase/app';\n//import 'firebase/firestore';\nimport { async } from \"@firebase/util\";\nimport RadioGroup from \"./SubComponent/RadioGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Intro() {\n  _s();\n  const [user, setUser] = useState({\n    name: '',\n    dob: '',\n    response: []\n  });\n  const [username, setUsername] = useState(\"\");\n  const [dob, setDob] = useState(Timestamp.now());\n  const [gender, setGender] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [responseId, setResponseId] = useState(\"\");\n  const genderOptions = ['Male', 'Female', 'Others'];\n  const statusOptions = ['Student', 'Employeed/Business', 'Unemployeed'];\n  const [genderValue, setGenderValue] = useState(null);\n  const [statusValue, setStatusValue] = useState(null);\n  const [view, viewState] = useState(1);\n  const formRef = useRef(null);\n  /*const handleUsernameChange = (event) => {\n      setUsername(event.target.value);\n  };\n  const handleDobChange = (event) => {\n      setDob(event.target.value);\n  };\n  useEffect(() => {\n      const saveUser = () => {\n          onSnapshot(userService.getAll(), (querySnapShot) => {\n           })\n          userService.getAll().doc(1).set\n      }\n  })*/\n  const db = collection(firebase, 'users');\n  const handleSubmit = event => {\n    event.preventDefault();\n    //const db = firebase.firestore();\n    //const userRef = db.doc('1');\n    const timestamp = Timestamp.fromDate(new Date());\n    //const currentDateFirestore = Timestamp()\n    setDoc(doc(firebase, \"users\", \"test1\"), {\n      name: username,\n      dob: dob,\n      gender: gender,\n      status: status,\n      response: responseId,\n      createTime: timestamp\n    });\n    setUsername(\"\");\n    setDob(\"\");\n    setGender(\"\");\n    setStatus(\"\");\n  };\n\n  /*const handleSubmit = async (e) => {\n      e.preventDefault();\n      var currentDate = new Date();\n      try {\n          setUser({\n              name: this.state.name,\n              dob: this.state.dob,\n              createTime: currentDateFirestore,\n              response: []\n          });\n          await addDoc(db, user);\n          alert(user.name+' Data Saved!! '+user.dob);\n      } catch (error){\n          console.log(error);\n          alert(error);\n      }\n  };*/\n  /*const handleSubmit = async (e) => {\n      var currentDate = new Date();\n      var currentDateFirestore = firebase.firestore.Timestamp.fromDate(currentDate);\n      alert('hii');\n      try{\n          await addDoc(collection(firebase, 'users'), {\n              name: 'shubham',\n              email: 'shubham@gmil.com',\n              dob: currentDateFirestore\n          })\n          onclose();\n      } catch (err){\n          alert(err);\n      }\n  }*/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please fill out the registration form.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"addTask\",\n      name: \"addTask\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n        //onChange = {this.updateInput}\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"birthday\",\n        children: \"Birthday:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"birthday\",\n        name: \"birthday\",\n        value: dob,\n        onChange: e => setDob(e.target.value)\n        //onChange = {this.updateInput}\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"legend\", {\n        for: \"gender\",\n        children: \"Gender:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        options: genderOptions,\n        value: genderValue,\n        setValue: setGenderValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"legend\", {\n        for: \"status\",\n        children: \"Professional Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        options: statusOptions,\n        value: statusValue,\n        setValue: setStatusValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(Intro, \"2bAUQe0ZhXhOa3F2bzWLPKCVXJM=\");\n_c = Intro;\nexport default Intro;\nvar _c;\n$RefreshReg$(_c, \"Intro\");","map":{"version":3,"names":["addDoc","collection","onSnapshot","Timestamp","useEffect","useRef","useState","userService","firebase","doc","setDoc","async","RadioGroup","jsxDEV","_jsxDEV","Intro","_s","user","setUser","name","dob","response","username","setUsername","setDob","now","gender","setGender","status","setStatus","responseId","setResponseId","genderOptions","statusOptions","genderValue","setGenderValue","statusValue","setStatusValue","view","viewState","formRef","db","handleSubmit","event","preventDefault","timestamp","fromDate","Date","createTime","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","for","type","id","value","onChange","e","target","required","options","setValue","_c","$RefreshReg$"],"sources":["/Users/shubhamsuree/Desktop/project/react/quiz-app/src/Components/Intro.jsx"],"sourcesContent":["import { addDoc, collection, onSnapshot, Timestamp } from \"firebase/firestore\";\nimport { useEffect, useRef, useState } from \"react\";\nimport userService from \"../Services/users.service\"; \nimport firebase from \"../firebase\";\nimport { doc, setDoc } from \"firebase/firestore\";\n\n//import firebase from 'firebase/app';\n//import 'firebase/firestore';\nimport { async } from \"@firebase/util\";\nimport RadioGroup from \"./SubComponent/RadioGroup\";\n\nfunction Intro(){\n    const [user, setUser] = useState({\n        name: '',\n        dob: '',\n        response: []\n    });\n    const [username, setUsername] = useState(\"\");\n    const [dob, setDob] = useState(Timestamp.now());\n    const [gender, setGender] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [responseId, setResponseId] = useState(\"\");\n    const genderOptions = ['Male', 'Female', 'Others'];\n    const statusOptions = ['Student', 'Employeed/Business', 'Unemployeed'];\n    const [genderValue, setGenderValue] = useState(null);\n    const [statusValue, setStatusValue] = useState(null);\n    const [view, viewState] = useState(1);\n    const formRef = useRef(null);\n    /*const handleUsernameChange = (event) => {\n        setUsername(event.target.value);\n    };\n    const handleDobChange = (event) => {\n        setDob(event.target.value);\n    };\n    useEffect(() => {\n        const saveUser = () => {\n            onSnapshot(userService.getAll(), (querySnapShot) => {\n\n            })\n            userService.getAll().doc(1).set\n        }\n    })*/\n    const db = collection(firebase, 'users');\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        //const db = firebase.firestore();\n        //const userRef = db.doc('1');\n        const timestamp = Timestamp.fromDate(new Date());\n        //const currentDateFirestore = Timestamp()\n        setDoc(doc(firebase, \"users\", \"test1\"),\n        {\n            name: username,\n            dob: dob,\n            gender: gender,\n            status: status,\n            response: responseId,\n            createTime: timestamp\n        });\n\n        setUsername(\"\");\n        setDob(\"\");\n        setGender(\"\");\n        setStatus(\"\");\n    };\n\n    /*const handleSubmit = async (e) => {\n        e.preventDefault();\n        var currentDate = new Date();\n        try {\n            setUser({\n                name: this.state.name,\n                dob: this.state.dob,\n                createTime: currentDateFirestore,\n                response: []\n            });\n            await addDoc(db, user);\n            alert(user.name+' Data Saved!! '+user.dob);\n        } catch (error){\n            console.log(error);\n            alert(error);\n        }\n    };*/\n    /*const handleSubmit = async (e) => {\n        var currentDate = new Date();\n        var currentDateFirestore = firebase.firestore.Timestamp.fromDate(currentDate);\n        alert('hii');\n        try{\n            await addDoc(collection(firebase, 'users'), {\n                name: 'shubham',\n                email: 'shubham@gmil.com',\n                dob: currentDateFirestore\n            })\n            onclose();\n        } catch (err){\n            alert(err);\n        }\n    }*/\n    return(\n        <div className=\"container\">\n        <h1>Welcome!</h1>\n        <p>Please fill out the registration form.</p>\n        <form onSubmit={handleSubmit} className='addTask' name='addTask'>\n            <label for=\"name\">Name:</label>\n            <input type=\"text\" \n                id=\"name\" \n                name=\"name\" \n                value={username} \n                onChange={ (e) => setUsername(e.target.value)} \n                //onChange = {this.updateInput}\n                required/>\n            <label for=\"birthday\">Birthday:</label>\n            <input type=\"date\" \n                id=\"birthday\" \n                name=\"birthday\" \n                value={dob} \n                onChange={ (e) => setDob(e.target.value)} \n                //onChange = {this.updateInput}\n                required/>\n            <legend for=\"gender\">Gender:</legend>\n            <RadioGroup options={ genderOptions } value={genderValue} setValue={setGenderValue} />\n            <legend for=\"status\">Professional Status:</legend>\n            <RadioGroup options={ statusOptions} value={statusValue} setValue={setStatusValue} /> \n            <button type=\"submit\">Next</button>\n        </form>\n    </div>\n    )\n}\n\nexport default Intro;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}