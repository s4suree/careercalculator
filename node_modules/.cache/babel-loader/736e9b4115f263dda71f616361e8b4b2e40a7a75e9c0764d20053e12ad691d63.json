{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamsuree/Desktop/project/react/quiz-app/src/Components/QuestionsList.jsx\",\n  _s = $RefreshSig$();\nimport { arrayUnion, collection, doc, onSnapshot, setDoc, updateDoc } from \"firebase/firestore\";\nimport { useEffect, useState } from \"react\";\nimport firebase from \"../firebase\";\nimport questionsService from \"../Services/questions.service\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionsList() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const rangeOptions = ['Exactly like me', 'Very much like me', 'Only slightly like me', 'Not at all like me'];\n  const [userResponse, setUserResponse] = useState([]);\n  const delay = async e => {\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    console.log(\"Hello\");\n    e.target.classList.remove(\"correct\");\n    setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n  };\n  const handleAnswerSelection = (selectedAnswer, response) => {\n    // You can add logic here to check the answer and provide feedback\n    selectedAnswer.target.classList.add(\"correct\");\n    setUserResponse(userResponse => [...userResponse, response]);\n    console.log(userResponse);\n    const db = collection(firebase, 'users');\n    updateDoc(doc(firebase, \"users\", \"test1\"), {\n      response: userResponse\n    }, {\n      merge: true\n    });\n    delay(selectedAnswer);\n  };\n  useEffect(() => {\n    const fetchQuestions = () => {\n      console.log('innn');\n      const fetchQues = [];\n      onSnapshot(questionsService.getAll(), querySnapshot => {\n        querySnapshot.forEach((doc, index) => {\n          fetchQues.push({\n            id: index,\n            question: doc.data().question,\n            options: rangeOptions\n            /*answer: doc.data().answer,\n            option1: doc.data().option_1,\n            option2: doc.data().option_2,\n            option3: doc.data().option_3,*/\n          });\n          console.log(doc);\n        });\n        setQuestions(fetchQues);\n      });\n    };\n    fetchQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentQuestionIndex < questions.length && /*#__PURE__*/_jsxDEV(Question, {\n      question: questions[currentQuestionIndex].question,\n      options: questions[currentQuestionIndex].options,\n      handleAnswerSelection: handleAnswerSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(QuestionsList, \"MmSvrmLgcxhMN6FZJsTcOKjqfwA=\");\n_c = QuestionsList;\nexport default QuestionsList;\nvar _c;\n$RefreshReg$(_c, \"QuestionsList\");","map":{"version":3,"names":["arrayUnion","collection","doc","onSnapshot","setDoc","updateDoc","useEffect","useState","firebase","questionsService","Question","jsxDEV","_jsxDEV","QuestionsList","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","rangeOptions","userResponse","setUserResponse","delay","e","Promise","resolve","setTimeout","console","log","target","classList","remove","prevIndex","handleAnswerSelection","selectedAnswer","response","add","db","merge","fetchQuestions","fetchQues","getAll","querySnapshot","forEach","index","push","id","question","data","options","children","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shubhamsuree/Desktop/project/react/quiz-app/src/Components/QuestionsList.jsx"],"sourcesContent":["import { arrayUnion, collection, doc, onSnapshot, setDoc, updateDoc } from \"firebase/firestore\";\nimport { useEffect, useState } from \"react\";\nimport firebase from \"../firebase\";\nimport questionsService from \"../Services/questions.service\";\nimport Question from \"./Question\";\n\nfunction QuestionsList(){\n    const [questions, setQuestions] = useState([]);\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const rangeOptions = ['Exactly like me', 'Very much like me', 'Only slightly like me', 'Not at all like me'];\n    const [userResponse, setUserResponse] = useState([]);\n\n    const delay = async (e) => {\n        await new Promise((resolve) => setTimeout(resolve, 2000));\n        console.log(\"Hello\");\n        e.target.classList.remove(\"correct\");\n        setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\n      };\n    const handleAnswerSelection = (selectedAnswer, response) => {\n        // You can add logic here to check the answer and provide feedback\n        selectedAnswer.target.classList.add(\"correct\");\n        setUserResponse(userResponse => [...userResponse, response]);\n        console.log(userResponse);\n        const db = collection(firebase, 'users');\n        updateDoc(doc(firebase, \"users\", \"test1\"),\n        {\n            response: userResponse\n        }, {merge: true});\n        delay(selectedAnswer);\n    };\nuseEffect(() => {\n    const fetchQuestions = () => {\n        console.log('innn');\n        const fetchQues = [];\n        onSnapshot(questionsService.getAll(), (querySnapshot) => {\n            querySnapshot.forEach((doc, index) => {\n                fetchQues.push({\n                    id: index,\n                    question: doc.data().question,\n                    options: rangeOptions\n                    /*answer: doc.data().answer,\n                    option1: doc.data().option_1,\n                    option2: doc.data().option_2,\n                    option3: doc.data().option_3,*/\n                });\n                console.log(doc);\n            })\n            setQuestions(fetchQues);\n        })\n    };\n    fetchQuestions();\n    }, []);\n            return (\n        <div>\n            {currentQuestionIndex < questions.length && (\n                <Question\n                    question={questions[currentQuestionIndex].question}\n                    options = {questions[currentQuestionIndex].options}\n                    handleAnswerSelection={handleAnswerSelection} />\n            )}\n        </div>\n            )\n}\nexport default QuestionsList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}